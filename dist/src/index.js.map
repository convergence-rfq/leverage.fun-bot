{"version":3,"sources":["../../src/index.ts"],"sourcesContent":["import mongoose from 'mongoose';\nimport express from 'express';\nimport cors from 'cors';\nimport helmet from 'helmet';\nimport Config from './config.js';\n\nconst app = express();\n\napp.use(cors());\napp.use(helmet());\napp.use(express.json());\n\ntry {\n  await mongoose.connect(`${Config.MONGO_URI}`);\n  console.log('Connected to mongoose');\n  console.log(`Admin Public Key: ${Config.ADMIN_KEYPAIR.publicKey.toBase58()}`);\n  app.listen(Config.PORT, () =>\n    console.log(`Server running on port ${Config.PORT}`),\n  );\n  app.use((req, res, next) => {\n    console.log(\n      `[${new Date().toISOString()}] ${req.method} ${req.originalUrl} ${res.statusCode} ${req.ip}`,\n    );\n    next();\n  });\n} catch (error) {\n  console.error('Error connecting to database: ', error);\n} finally {\n  console.log('Finally');\n}\n"],"names":["mongoose","express","cors","helmet","Config","app","use","json","connect","MONGO_URI","console","log","ADMIN_KEYPAIR","publicKey","toBase58","listen","PORT","req","res","next","Date","toISOString","method","originalUrl","statusCode","ip","error"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA,OAAOA,cAAc,WAAW;AAChC,OAAOC,aAAa,UAAU;AAC9B,OAAOC,UAAU,OAAO;AACxB,OAAOC,YAAY,SAAS;AAC5B,OAAOC,YAAY,cAAc;AAEjC,MAAMC,MAAMJ;AAEZI,IAAIC,GAAG,CAACJ;AACRG,IAAIC,GAAG,CAACH;AACRE,IAAIC,GAAG,CAACL,QAAQM,IAAI;AAEpB,IAAI;IACF,MAAMP,SAASQ,OAAO,CAAC,CAAC,EAAEJ,OAAOK,SAAS,CAAC,CAAC;IAC5CC,QAAQC,GAAG,CAAC;IACZD,QAAQC,GAAG,CAAC,CAAC,kBAAkB,EAAEP,OAAOQ,aAAa,CAACC,SAAS,CAACC,QAAQ,GAAG,CAAC;IAC5ET,IAAIU,MAAM,CAACX,OAAOY,IAAI,EAAE,IACtBN,QAAQC,GAAG,CAAC,CAAC,uBAAuB,EAAEP,OAAOY,IAAI,CAAC,CAAC;IAErDX,IAAIC,GAAG,CAAC,CAACW,KAAKC,KAAKC;QACjBT,QAAQC,GAAG,CACT,CAAC,CAAC,EAAE,IAAIS,OAAOC,WAAW,GAAG,EAAE,EAAEJ,IAAIK,MAAM,CAAC,CAAC,EAAEL,IAAIM,WAAW,CAAC,CAAC,EAAEL,IAAIM,UAAU,CAAC,CAAC,EAAEP,IAAIQ,EAAE,CAAC,CAAC;QAE9FN;IACF;AACF,EAAE,OAAOO,OAAO;IACdhB,QAAQgB,KAAK,CAAC,kCAAkCA;AAClD,SAAU;IACRhB,QAAQC,GAAG,CAAC;AACd"}
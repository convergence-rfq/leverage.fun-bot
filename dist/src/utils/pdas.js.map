{"version":3,"sources":["../../../src/utils/pdas.ts"],"sourcesContent":["import { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nimport Config from '../config.js';\nimport { OptionTypeV2, serializeStrikePrices } from './index.js';\n\nexport function getExpirationDataPda(\n  underlyingMint: PublicKey,\n  expiration: BN,\n  oracle: PublicKey,\n) {\n  return PublicKey.findProgramAddressSync(\n    [\n      underlyingMint.toBuffer(),\n      expiration.toArrayLike(Buffer, 'le', 8),\n      oracle.toBuffer(),\n    ],\n    Config.LEVERAGE_FUN_PROGRAM_ID,\n  );\n}\n\nexport function getEuroMetaPda(\n  underlyingMint: PublicKey,\n  quoteMint: PublicKey,\n  expiration: BN,\n  optionType: OptionTypeV2,\n  underlyingPool: PublicKey,\n  strikePrices: BN[],\n) {\n  return PublicKey.findProgramAddressSync(\n    [\n      underlyingMint.toBuffer(),\n      quoteMint.toBuffer(),\n      expiration.toArrayLike(Buffer, 'le', 8),\n      new BN(optionType as number).toArrayLike(Buffer, 'le', 1),\n      underlyingPool.toBuffer(),\n      serializeStrikePrices(strikePrices),\n    ],\n    Config.LEVERAGE_FUN_PROGRAM_ID,\n  );\n}\n\nexport function getOptionMintPda(euroMeta: PublicKey) {\n  const textEncoder = new TextEncoder();\n  return PublicKey.findProgramAddressSync(\n    [euroMeta.toBuffer(), textEncoder.encode('optionMint')],\n    Config.LEVERAGE_FUN_PROGRAM_ID,\n  );\n}\n\nexport function getWriterMintPda(euroMeta: PublicKey) {\n  const textEncoder = new TextEncoder();\n  return PublicKey.findProgramAddressSync(\n    [euroMeta.toBuffer(), textEncoder.encode('writerMint')],\n    Config.LEVERAGE_FUN_PROGRAM_ID,\n  );\n}\n\nexport function getUnderlyingPoolPda(underlyingMint: PublicKey) {\n  const textEncoder = new TextEncoder();\n  return PublicKey.findProgramAddressSync(\n    [underlyingMint.toBuffer(), textEncoder.encode('underlyingPool')],\n    Config.LEVERAGE_FUN_PROGRAM_ID,\n  );\n}\n\nexport function getQuotePoolPda(quoteMint: PublicKey) {\n  const textEncoder = new TextEncoder();\n  return PublicKey.findProgramAddressSync(\n    [quoteMint.toBuffer(), textEncoder.encode('stablePool')],\n    Config.LEVERAGE_FUN_PROGRAM_ID,\n  );\n}\n\nexport function getPoolAuthorityPda() {\n  const textEncoder = new TextEncoder();\n  return PublicKey.findProgramAddressSync(\n    [textEncoder.encode('poolAuthority')],\n    Config.LEVERAGE_FUN_PROGRAM_ID,\n  );\n}\n\nexport function getOptionCyclePda(vaultAuthority: PublicKey, cycleNumber: BN) {\n  const textEncoder = new TextEncoder();\n  return PublicKey.findProgramAddressSync(\n    [\n      textEncoder.encode('option_cycle'),\n      vaultAuthority.toBuffer(),\n      cycleNumber.toArrayLike(Buffer, 'le', 8),\n    ],\n    Config.VAULTS_PROGRAM_ID,\n  );\n}\n\nexport function getAuctionProgramVaultPda(auction: PublicKey) {\n  const textEncoder = new TextEncoder();\n  return PublicKey.findProgramAddressSync(\n    [textEncoder.encode('vault'), auction.toBuffer()],\n    Config.AUCTION_PROGRAM_ID,\n  );\n}\n\nexport function getAuctionStatePda(creator: PublicKey, cycleNumber: BN) {\n  const textEncoder = new TextEncoder();\n  return PublicKey.findProgramAddressSync(\n    [\n      textEncoder.encode('auction'),\n      creator.toBuffer(),\n      cycleNumber.toArrayLike(Buffer, 'le', 8),\n    ],\n    Config.AUCTION_PROGRAM_ID,\n  );\n}\n\nexport function getPoolAuthorityVaultsPda() {\n  const textEncoder = new TextEncoder();\n  return PublicKey.findProgramAddressSync(\n    [textEncoder.encode('pool_authority')],\n    Config.VAULTS_PROGRAM_ID,\n  );\n}\n"],"names":["PublicKey","BN","Config","serializeStrikePrices","getExpirationDataPda","underlyingMint","expiration","oracle","findProgramAddressSync","toBuffer","toArrayLike","Buffer","LEVERAGE_FUN_PROGRAM_ID","getEuroMetaPda","quoteMint","optionType","underlyingPool","strikePrices","getOptionMintPda","euroMeta","textEncoder","TextEncoder","encode","getWriterMintPda","getUnderlyingPoolPda","getQuotePoolPda","getPoolAuthorityPda","getOptionCyclePda","vaultAuthority","cycleNumber","VAULTS_PROGRAM_ID","getAuctionProgramVaultPda","auction","AUCTION_PROGRAM_ID","getAuctionStatePda","creator","getPoolAuthorityVaultsPda"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"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"}
{"version":3,"sources":["../../../src/controllers/mintOptions.controller.ts"],"sourcesContent":["import { Request, Response } from 'express';\nimport Config from '../config.js';\nimport { getExpirationDataPda } from '../utils/pdas.js';\nimport { sleep, postTelegramMessage } from '../utils/index.js';\nimport * as anchor from '@coral-xyz/anchor';\nimport BN from 'bn.js';\nimport { getProgram } from '../utils/programUtils.js';\nimport { TOKEN_PROGRAM_ID } from '@coral-xyz/anchor/dist/cjs/utils/token.js';\nimport { Transaction } from '@solana/web3.js';\n\nasync function processMintingTransaction(\n  provider: anchor.AnchorProvider,\n  expiration: BN,\n): Promise<string> {\n  const program = await getProgram(provider);\n  const priceDecimals = 2;\n  const [expirationData, _expirationDataBump] = getExpirationDataPda(\n    Config.TESTNET_WETH_MINT,\n    expiration,\n    Config.TESTNET_ORACLE_PUBLIC_KEY,\n  );\n\n  const initExpirationDataInstruction = await program.methods\n    .initExpirationData(expiration, priceDecimals, 1)\n    .accounts({\n      payer: provider.publicKey,\n      underlyingMint: Config.TESTNET_WETH_MINT,\n      expirationData: expirationData,\n      oracle: Config.TESTNET_ORACLE_PUBLIC_KEY,\n      tokenProgram: TOKEN_PROGRAM_ID,\n      rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n      systemProgram: anchor.web3.SystemProgram.programId,\n    })\n    .signers([Config.ADMIN_KEYPAIR])\n    .instruction();\n\n  const tx = new Transaction().add(initExpirationDataInstruction);\n  return await provider.sendAndConfirm(tx);\n}\n\nasync function continuousMintingProcess(provider: anchor.AnchorProvider) {\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    try {\n      const expiration = new BN(new Date().getTime() / 1000 + 30);\n      const txHash = await processMintingTransaction(provider, expiration);\n      await postTelegramMessage(txHash);\n      console.log(`Transaction completed successfully: ${txHash}`);\n    } catch (error) {\n      console.error('Background transaction failed:', error);\n    }\n\n    await sleep(3600000);\n  }\n}\n\nexport async function getMintOptions(_req: Request, res: Response) {\n  res.send('Cannot GET /mint-options');\n}\n\nexport async function startMintingOptions(_req: Request, res: Response) {\n  const provider = anchor.AnchorProvider.env();\n  anchor.setProvider(provider);\n\n  continuousMintingProcess(provider).catch(error => {\n    console.error('Continuous processing failed:', error);\n  });\n\n  res.status(202).json({\n    message: 'Minting options started',\n    status: 'pending',\n  });\n}\n"],"names":["Config","getExpirationDataPda","sleep","postTelegramMessage","anchor","BN","getProgram","TOKEN_PROGRAM_ID","Transaction","processMintingTransaction","provider","expiration","program","priceDecimals","expirationData","_expirationDataBump","TESTNET_WETH_MINT","TESTNET_ORACLE_PUBLIC_KEY","initExpirationDataInstruction","methods","initExpirationData","accounts","payer","publicKey","underlyingMint","oracle","tokenProgram","rent","web3","SYSVAR_RENT_PUBKEY","systemProgram","SystemProgram","programId","signers","ADMIN_KEYPAIR","instruction","tx","add","sendAndConfirm","continuousMintingProcess","Date","getTime","txHash","console","log","error","getMintOptions","_req","res","send","startMintingOptions","AnchorProvider","env","setProvider","catch","status","json","message"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AACA,OAAOA,YAAY,eAAe;AAClC,SAASC,oBAAoB,QAAQ,mBAAmB;AACxD,SAASC,KAAK,EAAEC,mBAAmB,QAAQ,oBAAoB;AAC/D,YAAYC,YAAY,oBAAoB;AAC5C,OAAOC,QAAQ,QAAQ;AACvB,SAASC,UAAU,QAAQ,2BAA2B;AACtD,SAASC,gBAAgB,QAAQ,4CAA4C;AAC7E,SAASC,WAAW,QAAQ,kBAAkB;AAE9C,eAAeC,0BACbC,QAA+B,EAC/BC,UAAc;IAEd,MAAMC,UAAU,MAAMN,WAAWI;IACjC,MAAMG,gBAAgB;IACtB,MAAM,CAACC,gBAAgBC,oBAAoB,GAAGd,qBAC5CD,OAAOgB,iBAAiB,EACxBL,YACAX,OAAOiB,yBAAyB;IAGlC,MAAMC,gCAAgC,MAAMN,QAAQO,OAAO,CACxDC,kBAAkB,CAACT,YAAYE,eAAe,GAC9CQ,QAAQ,CAAC;QACRC,OAAOZ,SAASa,SAAS;QACzBC,gBAAgBxB,OAAOgB,iBAAiB;QACxCF,gBAAgBA;QAChBW,QAAQzB,OAAOiB,yBAAyB;QACxCS,cAAcnB;QACdoB,MAAMvB,OAAOwB,IAAI,CAACC,kBAAkB;QACpCC,eAAe1B,OAAOwB,IAAI,CAACG,aAAa,CAACC,SAAS;IACpD,GACCC,OAAO,CAAC;QAACjC,OAAOkC,aAAa;KAAC,EAC9BC,WAAW;IAEd,MAAMC,KAAK,IAAI5B,cAAc6B,GAAG,CAACnB;IACjC,OAAO,MAAMR,SAAS4B,cAAc,CAACF;AACvC;AAEA,eAAeG,yBAAyB7B,QAA+B;IACrE,iDAAiD;IACjD,MAAO,KAAM;QACX,IAAI;YACF,MAAMC,aAAa,IAAIN,GAAG,IAAImC,OAAOC,OAAO,KAAK,OAAO;YACxD,MAAMC,SAAS,MAAMjC,0BAA0BC,UAAUC;YACzD,MAAMR,oBAAoBuC;YAC1BC,QAAQC,GAAG,CAAC,CAAC,oCAAoC,EAAEF,OAAO,CAAC;QAC7D,EAAE,OAAOG,OAAO;YACdF,QAAQE,KAAK,CAAC,kCAAkCA;QAClD;QAEA,MAAM3C,MAAM;IACd;AACF;AAEA,OAAO,eAAe4C,eAAeC,IAAa,EAAEC,GAAa;IAC/DA,IAAIC,IAAI,CAAC;AACX;AAEA,OAAO,eAAeC,oBAAoBH,IAAa,EAAEC,GAAa;IACpE,MAAMtC,WAAWN,OAAO+C,cAAc,CAACC,GAAG;IAC1ChD,OAAOiD,WAAW,CAAC3C;IAEnB6B,yBAAyB7B,UAAU4C,KAAK,CAACT,CAAAA;QACvCF,QAAQE,KAAK,CAAC,iCAAiCA;IACjD;IAEAG,IAAIO,MAAM,CAAC,KAAKC,IAAI,CAAC;QACnBC,SAAS;QACTF,QAAQ;IACV;AACF"}
{"version":3,"sources":["../../../src/controllers/initializePools.controller.ts"],"sourcesContent":["import { getProgram } from '../utils/programUtils';\nimport Config from '../config';\nimport * as anchor from '@coral-xyz/anchor';\nimport { PublicKey } from '@solana/web3.js';\nimport { Request, Response } from 'express';\nimport { EuroPrimitive } from '../types/euro_primitive';\nimport {\n  getUnderlyingPoolPda,\n  getQuotePoolPda,\n  getPoolAuthorityPda,\n} from '../utils/pdas';\nimport { TOKEN_PROGRAM_ID } from '@coral-xyz/anchor/dist/cjs/utils/token';\n\nexport async function getInitializePools(_req: Request, res: Response) {\n  const provider = anchor.AnchorProvider.env();\n  anchor.setProvider(provider);\n  const program = await getProgram(provider);\n  await initializePools(\n    Config.TESTNET_WETH_MINT,\n    Config.TESTNET_QUOTE_MINT,\n    provider,\n    program,\n  );\n  res.status(200).json({\n    message: 'Initialize pools',\n  });\n}\n\nexport async function initializePools(\n  underlyingMint: PublicKey,\n  quoteMint: PublicKey,\n  provider: anchor.AnchorProvider,\n  program: anchor.Program<EuroPrimitive>,\n) {\n  const [underlyingPool] = getUnderlyingPoolPda(underlyingMint);\n  const [quotePool] = getQuotePoolPda(quoteMint);\n  const [poolAuthority] = getPoolAuthorityPda();\n  {\n    const txHash = await program.methods\n      .initializeStablePool()\n      .accounts({\n        payer: provider.publicKey,\n        stableMint: quoteMint,\n        stablePool: quotePool,\n        poolAuthority,\n        tokenProgram: TOKEN_PROGRAM_ID,\n        rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n        systemProgram: anchor.web3.SystemProgram.programId,\n      })\n      .signers([Config.ADMIN_KEYPAIR])\n      .rpc();\n    console.log(`Transaction completed successfully: ${txHash}`);\n  }\n  const txHash = await program.methods\n    .initializeUnderlyingPool()\n    .accounts({\n      payer: provider.publicKey,\n      underlyingMint,\n      underlyingPool,\n      poolAuthority,\n      tokenProgram: TOKEN_PROGRAM_ID,\n      rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n      systemProgram: anchor.web3.SystemProgram.programId,\n    })\n    .signers([Config.ADMIN_KEYPAIR])\n    .rpc();\n  console.log(`Transaction completed successfully: ${txHash}`);\n}\n"],"names":["getProgram","Config","anchor","getUnderlyingPoolPda","getQuotePoolPda","getPoolAuthorityPda","TOKEN_PROGRAM_ID","getInitializePools","_req","res","provider","AnchorProvider","env","setProvider","program","initializePools","TESTNET_WETH_MINT","TESTNET_QUOTE_MINT","status","json","message","underlyingMint","quoteMint","underlyingPool","quotePool","poolAuthority","txHash","methods","initializeStablePool","accounts","payer","publicKey","stableMint","stablePool","tokenProgram","rent","web3","SYSVAR_RENT_PUBKEY","systemProgram","SystemProgram","programId","signers","ADMIN_KEYPAIR","rpc","console","log","initializeUnderlyingPool"],"rangeMappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","mappings":"AAAA,SAASA,UAAU,QAAQ,wBAAwB;AACnD,OAAOC,YAAY,YAAY;AAC/B,YAAYC,YAAY,oBAAoB;AAI5C,SACEC,oBAAoB,EACpBC,eAAe,EACfC,mBAAmB,QACd,gBAAgB;AACvB,SAASC,gBAAgB,QAAQ,yCAAyC;AAE1E,OAAO,eAAeC,mBAAmBC,IAAa,EAAEC,GAAa;IACnE,MAAMC,WAAWR,OAAOS,cAAc,CAACC,GAAG;IAC1CV,OAAOW,WAAW,CAACH;IACnB,MAAMI,UAAU,MAAMd,WAAWU;IACjC,MAAMK,gBACJd,OAAOe,iBAAiB,EACxBf,OAAOgB,kBAAkB,EACzBP,UACAI;IAEFL,IAAIS,MAAM,CAAC,KAAKC,IAAI,CAAC;QACnBC,SAAS;IACX;AACF;AAEA,OAAO,eAAeL,gBACpBM,cAAyB,EACzBC,SAAoB,EACpBZ,QAA+B,EAC/BI,OAAsC;IAEtC,MAAM,CAACS,eAAe,GAAGpB,qBAAqBkB;IAC9C,MAAM,CAACG,UAAU,GAAGpB,gBAAgBkB;IACpC,MAAM,CAACG,cAAc,GAAGpB;IACxB;QACE,MAAMqB,SAAS,MAAMZ,QAAQa,OAAO,CACjCC,oBAAoB,GACpBC,QAAQ,CAAC;YACRC,OAAOpB,SAASqB,SAAS;YACzBC,YAAYV;YACZW,YAAYT;YACZC;YACAS,cAAc5B;YACd6B,MAAMjC,OAAOkC,IAAI,CAACC,kBAAkB;YACpCC,eAAepC,OAAOkC,IAAI,CAACG,aAAa,CAACC,SAAS;QACpD,GACCC,OAAO,CAAC;YAACxC,OAAOyC,aAAa;SAAC,EAC9BC,GAAG;QACNC,QAAQC,GAAG,CAAC,CAAC,oCAAoC,EAAEnB,OAAO,CAAC;IAC7D;IACA,MAAMA,SAAS,MAAMZ,QAAQa,OAAO,CACjCmB,wBAAwB,GACxBjB,QAAQ,CAAC;QACRC,OAAOpB,SAASqB,SAAS;QACzBV;QACAE;QACAE;QACAS,cAAc5B;QACd6B,MAAMjC,OAAOkC,IAAI,CAACC,kBAAkB;QACpCC,eAAepC,OAAOkC,IAAI,CAACG,aAAa,CAACC,SAAS;IACpD,GACCC,OAAO,CAAC;QAACxC,OAAOyC,aAAa;KAAC,EAC9BC,GAAG;IACNC,QAAQC,GAAG,CAAC,CAAC,oCAAoC,EAAEnB,OAAO,CAAC;AAC7D"}